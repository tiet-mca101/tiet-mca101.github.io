#+startup: beamer
#+title: mca101 : computer graphics
#+subtitle: 2d geometry representation
#+email: bv.raghav@thapar.edu
#+options: H:3 toc:nil author:nil date:nil

#+include: preamble.org
#+beamer_header: \setbeamercovered{transparent}

* 2d geometry --- introduction

** Straight Lines

*** $y = mx + c$

\begin{align}
  \notag
  y = f(x) &= mx + c
\end{align}

#+attr_latex: :width 0.3\linewidth
[[file:images/st-line.png]]

*** parametric form

****                                                           :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .5
:END:
For any two vectors $\mathbf{u},\mathbf{v}\in V$, a
point on the line segment joining them is given
parameterised by $t\in[0,1]$, as

\begin{align}
  \notag
  \mathbf{p} = f(t) &= (1-t)\mathbf{u} + t\mathbf{v}
\end{align}

*** parametric form

****                                                           :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .5
:END:
Any point on a line in the direction of unit vector
$\mathbf{u}:\|\mathbf{u}\|_2^2=1$, and an incident
point $\mathbf{p}_0$ may be given parameterised by
$t\in\mathbb{R}$ as,

\begin{align}
  \notag
  \mathbf{p} = f(t) &= \mathbf{p}_0 + t\mathbf{u}
\end{align}

*** hesse normal form

****                                                           :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .5
:END:

#+attr_latex: :width 0.7\linewidth
[[file:images/Hesse_normalenform.svg.png]]

Distance from the origin $O$ to the line $E$ calculated
with the Hesse normal form. Normal vector in red, line
in green, point O shown in blue.

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .6
:END:

Given, \\
Normal to the line
$\mathbf{n}_0:\|\mathbf{n}_0\|_2^2=1$, and \\
its distance from origin, $d$;

\vspace{\baselineskip}
The point on the line is given implicitly as the locus
of all points $\mathbf{p}$ that satisfy,

\begin{align}
  \notag
  \mathbf{n}_0 \cdot \mathbf{p} - d &= 0
\end{align}

** Conics


*** circle

****                                                           :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .4
:END:

#+caption: Image Courtesy: [[https://en.wikipedia.org/wiki/File:Circle-withsegments.svg][Wikipedia]]
[[file:images/Circle-withsegments.svg.png]]

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .6
:END:
Implicit Form:
\begin{align}
  \notag
  f\left(\begin{matrix}x\\y\end{matrix}\right)
  &= x^2 + y^2 - r^2 = 0
\end{align}

Parametric Form:
\begin{align}
  \notag
  f(r,t)
  &= \begin{bmatrix}r\cos t\\r\sin t\end{bmatrix}
\end{align}
*** ellipse

****                                                           :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .4
:END:

#+caption: Image Courtesy: [[https://commons.wikimedia.org/wiki/File:Ellipse-param.svg][Wikipedia]]
[[file:images/Ellipse-param.svg.png]]

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .6
:END:
Standard form
\begin{align}
  \notag
  f\left( \begin{matrix}x\\y\end{matrix} \right)
  &= \frac{x^2}{a^2} + \frac{y^2}{b^2} - 1 = 0
\end{align}

Parametric Form
\begin{align}
  \notag
  f(t;a,b) &= \begin{bmatrix}
    a\cos t \\ b \sin t
  \end{bmatrix}
\end{align}


* mid-point algorithm

** Fundamentals

*** problem

In a quantised (pixelated or discrete) 2d plane, find
the set of points that visually approximate a given
curve, say a straight line or a conic.

*** method

****                                                           :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

*****                                                    :B_column:BMCOL:
:PROPERTIES:
:BEAMER_env: column
:BEAMER_col: .5
:END:
Iteratively, increment along one axes, \\
with respect to which, the slope of the curve is
gentle.

#+latex: {\vspace{\baselineskip}}
Decide whether it is required to increment along the
perpendicular axis or not.

#+latex: {\vspace{\baselineskip}}
Increment if required.

*** example
#+attr_latex: :width 0.65\linewidth
[[file:images/basic-midpoint-algo.png]]
