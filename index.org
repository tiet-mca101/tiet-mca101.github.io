# -*- org-image-actual-width: (64 128 256 512); openwith-associations: (("\.pdf\'" "evince" (file))); -*-
#+OPTIONS: num:nil html-postamble:t html-style:nil toc:1
#+TITLE: Course Page
#+SUBTITLE: MCA101 Computer Graphics
#+DATE: [2024-07-15 Mon]
#+AUTHOR: Raghav B. Venkataramaiyer
# #+AUTHOR: B.V. Raghav, Subham Kumar, Vinay P. Namboodiri
#+EMAIL: bv.raghav@thapar.edu
# #+EMAIL: bvraghav@iitk.ac.in, subhamkr@iitk.ac.in, vinaypn@iitk.ac.in
#+LANGUAGE: en

#+HTML_HEAD: <meta name="keywords" content="computer graphics">

#+HTML_HEAD: <meta name="description" content="Course Page for 
#+HTML_HEAD:   Course MCA101 Computer Graphcis">

#+HTML_HEAD: <meta name="viewport" content="width=device-width, initial-scale=1">
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/css/dhiw.css" />
#+HTML_HEAD: <link rel="shortcut icon" type="image/png"
#+HTML_HEAD:   href="https://www.gravatar.com/avatar/034c3feded7a09f8a5c481a2bd35d676.png?s=16" />

#+HTML_HEAD: <style>
#+HTML_HEAD: .iframe-container {
#+HTML_HEAD:   overflow: hidden;
#+HTML_HEAD:   /* Calculated from the aspect ratio of the content (in case of 16:9 it is 9/16= 0.5625) */
#+HTML_HEAD:   padding-top: 56.25%;
#+HTML_HEAD:   position: relative;
#+HTML_HEAD:   margin-bottom: 1em;
#+HTML_HEAD: }
#+HTML_HEAD:  
#+HTML_HEAD: .iframe-container iframe {
#+HTML_HEAD:    border: 0;
#+HTML_HEAD:    height: 100%;
#+HTML_HEAD:    left: 0;
#+HTML_HEAD:    position: absolute;
#+HTML_HEAD:    top: 0;
#+HTML_HEAD:    width: 100%;
#+HTML_HEAD: }
#+HTML_HEAD: </style>

#+PROPERTY: header-args+ :exports both :eval never-export
#+PROPERTY: header-args:python+ :results output replace verbatim

#+MACRO: cnc {{{sc(cnc)}}}


| L | T | P | Cr |
|---+---+---+----|
| 3 | 0 | 2 |  4 |

* Introduction

[[file:mca101-syllabus.pdf][Syllabus [PDF]​]]

** Academic Calendar
[[file:image/academic-calendar.png]]

** Scheduled break up

|-----------------------------+---+----+---|
|                             | W |  L | P |
|-----------------------------+---+----+---|
| Until MST                   | 8 | 22 | 8 |
| Post MST until Diwali Break | 3 |  7 | 2 |
| Post Diwali until EST       | 4 | 13 | 5 |
|-----------------------------+---+----+---|

** Evaluation
|                                    | Date      |  MM |
|------------------------------------+-----------+-----|
| MST                                | TBA       |  25 |
| EST                                | TBA       |  35 |
| LE1 (Lab Assignment)               | Sep 9–13  |  10 |
| LE2 (Lab Assignment)               | Nov 18–22 |  10 |
| LE3 (Project in group of 2/3 each) | Nov 4–8   |  20 |
|------------------------------------+-----------+-----|
|                                    |           | 100 |
#+TBLFM: @7$3=vsum(@I..II)

** Instructors
[[https://bvraghav.com/][Raghav]], Namrata Dimari

* Curriculum
** Course Objectives
Detailed study of graphics, 2D/3D Transformations,
representations and visualisation.

** Syllabus

*** Fundamentals
+ A brief history of application;
+ The hardware of display and its evolution;
+ Relationship b/w physical display and abstractions;
+ The limitation of time in “real-time” systems (Math);
+ Overview of Representation, Transformation,
  Interpolation and Visualisation;
+ The Graphics Pipeline (Detail).

*** Representation

**** Color
+ RGB (Detail);
+ Colour Tables (Detail);
+ Colour Spaces (Overview);
+ Barycentric Interpolation (Math).
**** 2D Geometry
+ Straight lines and Conics: Mid-point Algorithm
  (Math/Algo);
+ Fill (Algo);
+ Splines (Math).
**** 3D Geometry
+ 3D Geometry Representation: B-Rep (Detail);
+ Spline Surfaces (Overview);
+ Signed Distance Function (Overview);

*** Transformation
+ Fundamentals of Linear Algebra (Math);
+ The point of view;
+ Transformations and terminology (Detail);
+ Augmented matrix representation (Math);
+ Compose Operator and its semantic interpretation
  (Detail);
+ (De)Composing transformations (Math);
+ Understanding spaces (Math);
+ Orthographic and Projective Transforms (Math);

*** 2D Clipping
+ Sutherland Cohen (Algo);
+ Liang Barsky (Algo);
+ Nicholl-Lee-Nicholl (Detail);
+ Sutherland Hodgeman (Detail);
+ Weiler Atherton (Algo);

*** Visualisation

**** Illumination Models

**** Kajiya’s Rendering Equation

**** Visualisation of Scientific Data


* Schedule of Practicals

** Lab 1
The fundamentals: Javascript, Git, Markdown.

Prerequisite Installs:
+ Code Editor, eg. [[https://code.visualstudio.com/download][VSCode]], [[https://www.gnu.org/software/emacs/][Emacs]] etc.
+ Node/NPM: [[https://github.com/nvm-sh/nvm][NVM]], [[https://github.com/coreybutler/nvm-windows][NVM4W]], [[https://nodejs.org/en][NodeJS (Direct)]]
+ Git: [[https://git-scm.com/downloads][Git]]

Recommended Installs:
+ WSL2 [[https://learn.microsoft.com/en-us/windows/wsl/][(Windows Subsystem for Linux)]]: Using Linux Shell
  without leaving the comfort of your Windows install.
  Remember to specifically download and install WSL2,
  (and not WSL except if your system hardware demands
  so).  The section titled, [[https://learn.microsoft.com/en-us/windows/wsl/#get-started][“Get Started,”]] links to
  installation.

Further Reading:
+ Javascripting: [[https://www.github.com/sethvincent/javascripting][(Workshopper)]] =npm install -g
  javascripting=, [[https://developer.mozilla.org/en-US/docs/Web/JavaScript][(MDN Tutorials)]]
+ Git: [[https://github.com/jlord/git-it-electron/releases][(Electron App)]], [[https://git-scm.com/doc][(Online Documentation)]]
+ Markdown: [[https://github.com/workshopper/how-to-markdown][(Workshopper)]] =npm install -g
  how-to-markdown=, [[https://www.markdownguide.org/][Markdown Guide]]

** Lab 2
Shaders: [[https://github.com/stackgl/shader-school][(Workshopper)]] on GLSL Shaders

** Lab 3
The WebGL Tutorial: [[https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL][2D Objects and Colors]], and
animation.

Further Reading: [[https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial][(MDN Tutorials)]]

** Lab 4
[[https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL][Tranformations and 3D]]

Further Reading: [[https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial][(MDN Tutorials)]]

** Lab 5
(Bonus) Geometry (Scene) Authoring using Blender:
[[https://www.youtube.com/watch?v=Rqhtw7dg6Wk][(Youtube)]]

Prerequisite Installs:
+ Blender: [[https://www.blender.org/download/][(Download)]]

Further Reading:
+ [[https://www.blender.org/support/][Blender Official and Endorsed Support]]

** Lab 6: Eval Week                                                    :TBA:
LE1: Algo Implementation: Straight Lines and Fills

** Lab 7
[[https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL][Textures]] and its artistic aspect.

** MST

** Lab 8
[[https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL][More animation: Animating Textures]]

** Lab 9
[[https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL][Illumination Models: The Phong Model]]

** Lab 10
Buffer

** Diwali

** Lab 11: Eval Week                                                   :TBA:
Project Eval: LE3

** Lab 12
(Bonus) Scene Graphs

** Lab 13: Eval Week                                                   :TBA:
LE2: Quantitative Visualisation UI

** Lab 14
Buffer

* Resources

**  Text

1. Hughes, J. F., Dam, A. V., Mcguire, M., Sklar,
   D. F., Foley, J. D., Feiner, S. K., & Akeley,
   K. (2013). Computer Graphics: Principles and
   Practice (Third Edition). Addison Wesley.
2. Hearn, D., & Baker, M. P. (1994). Computer
   graphics. Prentice-Hall. [[https://books.google.co.in/books?id=WJiYQgAACAAJ][Google Books]]
3. Bartels, R. H., Beatty, J. C., & Barsky,
   B. A. (1995). An introduction to splines for use in
   computer graphics and geometric modeling. Morgan
   Kaufmann.

** Reference

1. Akenine-Möller, T., Haines, E., & Hoffman,
   N. (2018). Real-time rendering (Fourth Edition). AK
   Peters/CRC Press.
4. Woo, M., Neider, J., Davis, T., & Shreiner,
   D. (1999). OpenGL programming guide: The official
   guide to learning OpenGL, version 1.2 (3rd
   ed.). Addison-Wesley Longman Publishing Co.,
   Inc.
5. Xiang, Z., & Plastock, R. A. (2000). Schaum’s
   outline of computer graphics 2/E. McGraw-Hill
   Education. [[https://books.google.co.in/books?id=7gT1MhI1SbIC][(Google Books)]]
15. Javascript in general : [[https://nodeschool.io/][Website]]
7. WebGL2 (javascript) : [[https://github.com/sketchpunk/FunWithWebGL2][(Github)]]
2. WebGL Cheat Sheet [[file:webgl20-reference-guide.pdf][(PDF)]]
6. Stack.GL (javascript) : [[https://stack.gl/][(Website)]]
8. The book of shaders : [[https://thebookofshaders.com/][(Website)]]
12. An essay on interaction design : [[https://uxplanet.org/interaction-design-a-guide-for-beginners-32ff2364b53f][(URL)]]
13. Linear Algebra and transformations : [[https://www.3blue1brown.com/topics/linear-algebra][(3B1B)]]
14. Projective Geometry: [[https://www.youtube.com/watch?v=dPWTZSC7PYI][Youtube]], [[https://www.youtube.com/watch?v=mTw3o8-xMIo][Youtube]], [[https://www.youtube.com/watch?v=NYK0GBQVngs][Youtube]].
16. Signed Distance Function [[https://gist.github.com/bvraghav/c024e654444bdc345c22a1b411a2e266][Resource Collection]]
17. Triangle Tesselation [[http://www.cs.cmu.edu/~quake/triangle.html][Project Page]].
1. OpenGL Cheat Sheet [[file:opengl45-quick-reference-card.pdf][(PDF)]]
11. Qt Cheatsheet for desktop development : [[https://master.qt.io/learning/developerguides/qtquickdesktop/QtQuickApplicationGuide4Desktop.pdf][(PDF)]]
10. ModernGL (python) : [[https://moderngl.readthedocs.io/][Read The Docs]]
